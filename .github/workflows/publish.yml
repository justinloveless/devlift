name: Publish to npm

on:
  # Trigger on version tags
  push:
    tags:
      - 'v*'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (optional - will use package.json version if not provided)'
        required: false
        type: string

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build project
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist/
          retention-days: 1

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: test
    environment: npm-publish
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: dist/
          
      - name: Sync version from VERSION file
        run: npm run version:sync
        
      - name: Verify version consistency
        run: |
          VERSION_FILE=$(cat VERSION)
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "VERSION file: $VERSION_FILE"
          echo "package.json version: $PACKAGE_VERSION"
          if [ "$VERSION_FILE" != "$PACKAGE_VERSION" ]; then
            echo "❌ Version mismatch between VERSION file and package.json"
            exit 1
          fi
          echo "✅ Version consistency verified"
          
      - name: Get version for tagging  
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
          fi
          
      - name: Check if version exists on npm
        run: |
          VERSION=${{ steps.version.outputs.version }}
          if npm view devlift@$VERSION version 2>/dev/null; then
            echo "❌ Version $VERSION already exists on npm"
            exit 1
          fi
          echo "✅ Version $VERSION is available for publishing"
          
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## 🚀 Release v${{ steps.version.outputs.version }}
            
            Published to npm: https://www.npmjs.com/package/devlift/v/${{ steps.version.outputs.version }}
            
            ### Installation
            ```bash
            npm install -g devlift@${{ steps.version.outputs.version }}
            ```
            
            ### Changes
            - See commit history for detailed changes
            
          draft: false
          prerelease: false

  notification:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [test, publish]
    if: success()
    
    steps:
      - name: Success notification
        run: |
          echo "🎉 Successfully published devlift v$(cat VERSION || echo 'unknown') to npm!"
          echo "📦 Package is now available at: https://www.npmjs.com/package/devlift" 