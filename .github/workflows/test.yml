name: Test & Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['16', '18', '20']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter (if available)
        run: npm run lint || echo "No lint script found"
        continue-on-error: true
        
      - name: Run tests
        run: npm test
        
      - name: Build project
        run: npm run build
        
      - name: Upload coverage reports
        if: matrix.node-version == '18'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run TypeScript type check
        run: npx tsc --noEmit
        
      - name: Check for TypeScript errors
        run: |
          if npx tsc --noEmit --listFiles > /dev/null 2>&1; then
            echo "✅ TypeScript type check passed"
          else
            echo "❌ TypeScript type check failed"
            exit 1
          fi

  validate-config:
    name: Validate Configuration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Validate VERSION file exists
        run: |
          if [ ! -f VERSION ]; then
            echo "❌ VERSION file not found"
            exit 1
          fi
          echo "✅ VERSION file exists"
          
      - name: Validate version format
        run: |
          VERSION=$(cat VERSION)
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format in VERSION file: $VERSION"
            exit 1
          fi
          echo "✅ Version format is valid: $VERSION"
          
      - name: Test version sync
        run: |
          npm run version:sync
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          VERSION_FILE=$(cat VERSION)
          if [ "$VERSION_FILE" != "$PACKAGE_VERSION" ]; then
            echo "❌ Version sync failed"
            exit 1
          fi
          echo "✅ Version sync works correctly"

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        
      - name: Check for known vulnerabilities
        run: |
          if npm audit --audit-level=high --json | jq '.vulnerabilities | length' | grep -q '^0$'; then
            echo "✅ No high-severity vulnerabilities found"
          else
            echo "❌ High-severity vulnerabilities found"
            npm audit --audit-level=high
            exit 1
          fi 