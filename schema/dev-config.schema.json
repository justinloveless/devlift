{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/justinloveless/devlift/main/schema/dev-config.schema.json",
    "title": "DevLift Configuration",
    "description": "Configuration schema for DevLift development environment setup",
    "type": "object",
    "required": [
        "project_name",
        "version"
    ],
    "properties": {
        "$schema": {
            "type": "string",
            "description": "JSON Schema reference for validation and IntelliSense",
            "format": "uri"
        },
        "project_name": {
            "type": "string",
            "description": "A human-readable name for the project, used in logs and prompts",
            "minLength": 1,
            "examples": [
                "My Awesome Web App",
                "E-commerce Backend",
                "React Dashboard"
            ]
        },
        "version": {
            "type": "string",
            "description": "The version of the DevLift configuration schema",
            "enum": [
                "1"
            ],
            "examples": [
                "1"
            ]
        },
        "dependencies": {
            "type": "array",
            "description": "Project dependencies that need to be set up before this project",
            "items": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Human-readable name for the dependency",
                        "minLength": 1
                    },
                    "repository": {
                        "type": "string",
                        "description": "Git repository URL for remote dependencies",
                        "format": "uri",
                        "pattern": "^(https?://|git@)"
                    },
                    "branch": {
                        "type": "string",
                        "description": "Specific branch to checkout (optional, defaults to main)",
                        "examples": [
                            "main",
                            "develop",
                            "feature/new-api"
                        ]
                    },
                    "tag": {
                        "type": "string",
                        "description": "Specific tag to checkout (optional, takes precedence over branch)",
                        "pattern": "^v?\\d+\\.\\d+\\.\\d+",
                        "examples": [
                            "v1.2.0",
                            "1.0.0",
                            "v2.1.3"
                        ]
                    },
                    "path": {
                        "type": "string",
                        "description": "Relative path for local dependencies (alternative to repository)",
                        "examples": [
                            "../shared-lib",
                            "../auth-service"
                        ]
                    }
                },
                "additionalProperties": false,
                "anyOf": [
                    {
                        "required": [
                            "repository"
                        ]
                    },
                    {
                        "required": [
                            "path"
                        ]
                    }
                ]
            }
        },
        "environment": {
            "type": "object",
            "description": "Environment variable configuration",
            "properties": {
                "example_file": {
                    "type": "string",
                    "description": "The tool will copy this file to .env if it exists",
                    "examples": [
                        ".env.example",
                        ".env.template",
                        ".env.local"
                    ]
                },
                "variables": {
                    "type": "array",
                    "description": "Environment variables that the user will be prompted for",
                    "items": {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the environment variable",
                                "pattern": "^[A-Z][A-Z0-9_]*$",
                                "examples": [
                                    "DATABASE_URL",
                                    "API_KEY",
                                    "PORT"
                                ]
                            },
                            "prompt": {
                                "type": "string",
                                "description": "User-friendly prompt for this variable",
                                "examples": [
                                    "Enter your database connection string:",
                                    "Enter your API key:"
                                ]
                            },
                            "default": {
                                "type": "string",
                                "description": "Default value for the variable",
                                "examples": [
                                    "postgresql://localhost:5432/mydb",
                                    "3000",
                                    "development"
                                ]
                            },
                            "secret": {
                                "type": "boolean",
                                "description": "Whether this value should be masked during input",
                                "default": false
                            }
                        },
                        "additionalProperties": false
                    }
                }
            },
            "additionalProperties": false
        },
        "setup_steps": {
            "type": "array",
            "description": "An ordered list of setup commands to be executed",
            "items": {
                "type": "object",
                "required": [
                    "name",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Human-readable name for the step",
                        "minLength": 1,
                        "examples": [
                            "Install Dependencies",
                            "Start Database",
                            "Run Migrations"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of setup step",
                        "enum": [
                            "package-manager",
                            "shell",
                            "docker-compose",
                            "docker",
                            "database",
                            "service"
                        ],
                        "examples": [
                            "package-manager",
                            "shell",
                            "docker-compose"
                        ]
                    },
                    "manager": {
                        "type": "string",
                        "description": "Package manager to use (optional, auto-detected if not provided)",
                        "enum": [
                            "npm",
                            "yarn",
                            "pnpm",
                            "bun",
                            "pip",
                            "pipenv",
                            "poetry",
                            "bundle",
                            "cargo",
                            "go",
                            "mvn"
                        ],
                        "examples": [
                            "npm",
                            "yarn",
                            "pip"
                        ]
                    },
                    "command": {
                        "type": "string",
                        "description": "Command to execute",
                        "minLength": 1,
                        "examples": [
                            "install",
                            "up -d",
                            "npm run build",
                            "docker build -t myapp ."
                        ]
                    },
                    "depends_on": {
                        "type": "array",
                        "description": "List of step names that must complete before this one runs",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "uniqueItems": true,
                        "examples": [
                            [
                                "Install Dependencies"
                            ],
                            [
                                "Start Database",
                                "Install Dependencies"
                            ]
                        ]
                    }
                },
                "additionalProperties": false,
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "package-manager"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "command": {
                                    "enum": [
                                        "install",
                                        "sync",
                                        "run build",
                                        "run test",
                                        "run dev",
                                        "run start"
                                    ],
                                    "examples": [
                                        "install",
                                        "run build"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "docker-compose"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "command": {
                                    "pattern": "^(up|down|build|pull|restart|logs|ps)",
                                    "examples": [
                                        "up -d",
                                        "down",
                                        "build",
                                        "logs -f"
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "docker"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "command": {
                                    "pattern": "^(build|run|pull|push|tag|exec)",
                                    "examples": [
                                        "build -t myapp .",
                                        "run -d myapp",
                                        "pull postgres:13"
                                    ]
                                }
                            }
                        }
                    }
                ]
            }
        },
        "post_setup": {
            "type": "array",
            "description": "Instructions and actions to perform after a successful setup",
            "items": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of post-setup action",
                        "enum": [
                            "message",
                            "open"
                        ],
                        "examples": [
                            "message",
                            "open"
                        ]
                    },
                    "content": {
                        "type": "string",
                        "description": "Message content to display (for message type)",
                        "examples": [
                            "✅ Setup complete! Run 'npm run dev' to start development."
                        ]
                    },
                    "target": {
                        "type": "string",
                        "description": "Application to open (for open type)",
                        "enum": [
                            "editor",
                            "browser",
                            "vscode",
                            "jetbrains",
                            "sublime"
                        ],
                        "examples": [
                            "editor",
                            "browser"
                        ]
                    },
                    "path": {
                        "type": "string",
                        "description": "Path to open (for open type)",
                        "examples": [
                            ".",
                            "src/",
                            "http://localhost:3000"
                        ]
                    }
                },
                "additionalProperties": false,
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "message"
                                }
                            }
                        },
                        "then": {
                            "required": [
                                "content"
                            ]
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "type": {
                                    "const": "open"
                                }
                            }
                        },
                        "then": {
                            "required": [
                                "target"
                            ]
                        }
                    }
                ]
            }
        }
    },
    "additionalProperties": false,
    "examples": [
        {
            "project_name": "My Web App",
            "version": "1",
            "environment": {
                "example_file": ".env.example",
                "variables": [
                    {
                        "name": "DATABASE_URL",
                        "prompt": "Enter database connection string:",
                        "default": "postgresql://localhost:5432/myapp"
                    },
                    {
                        "name": "API_KEY",
                        "prompt": "Enter your API key:",
                        "secret": true
                    }
                ]
            },
            "setup_steps": [
                {
                    "name": "Install Dependencies",
                    "type": "package-manager",
                    "manager": "npm",
                    "command": "install"
                },
                {
                    "name": "Start Services",
                    "type": "docker-compose",
                    "command": "up -d"
                },
                {
                    "name": "Run Migrations",
                    "type": "shell",
                    "command": "npm run db:migrate",
                    "depends_on": [
                        "Start Services"
                    ]
                }
            ],
            "post_setup": [
                {
                    "type": "message",
                    "content": "🎉 Setup complete!\n\nTo start development:\n$ npm run dev\n\nYour app will be available at http://localhost:3000"
                },
                {
                    "type": "open",
                    "target": "editor",
                    "path": "."
                }
            ]
        }
    ]
}